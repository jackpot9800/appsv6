@echo off
echo üèóÔ∏è Build APK avec bundle JavaScript int√©gr√©
echo ==========================================

echo.
echo üìã Cette m√©thode garantit que le code JavaScript
echo sera inclus dans l'APK (r√©sout l'√©cran blanc).
echo.

if not exist package.json (
    echo ‚ùå package.json non trouv√©
    pause
    exit /b 1
)

echo ‚úÖ Projet d√©tect√©
echo.

echo üîß M√©thode de build :
echo 1. Expo run:android (avec bundle)
echo 2. EAS Build (cloud)
echo 3. Prebuild + Android Studio
echo.
set /p choice="Votre choix (1, 2 ou 3): "

if "%choice%"=="1" goto :expo_run
if "%choice%"=="2" goto :eas_build
if "%choice%"=="3" goto :prebuild
goto :end

:expo_run
echo.
echo üî® Build avec Expo (bundle int√©gr√©)...
echo IMPORTANT: SANS --no-bundler cette fois !
call npx expo run:android

if %errorlevel% neq 0 (
    echo ‚ùå Erreur de build
    echo V√©rifiez qu'un √©mulateur/appareil est connect√©
    pause
    exit /b 1
)

echo ‚úÖ Build r√©ussi avec bundle !
echo APK : android\app\build\outputs\apk\debug\app-debug.apk
goto :end

:eas_build
echo.
echo ‚òÅÔ∏è Build EAS (cloud)...
call npx eas-cli build --platform android --profile production

echo ‚úÖ Build EAS lanc√© !
echo APK sera t√©l√©chargeable depuis expo.dev
goto :end

:prebuild
echo.
echo üì± Prebuild + Android Studio...
call npx expo prebuild --platform android --clear

echo ‚úÖ Projet Android g√©n√©r√© !
echo.
echo Prochaines √©tapes :
echo 1. Ouvrez Android Studio
echo 2. Ouvrez le dossier 'android\'
echo 3. Build ‚Üí Generate Signed Bundle/APK
echo 4. IMPORTANT: Assurez-vous que bundleInRelease = true
goto :end

:end
echo.
pause